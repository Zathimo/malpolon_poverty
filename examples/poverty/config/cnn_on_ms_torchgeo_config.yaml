hydra:
  run:
    dir: outputs/${hydra.job.name}/${now:%Y-%m-%d_%H-%M-%S}

run:
  predict: false
  checkpoint_path:

data:
  num_classes: 1
  dataset_path: "examples/poverty/dataset/"
  labels_name: "observation_2013+.csv"
  train_batch_size: 16
  inference_batch_size: 16
  num_workers: 8
  
task:
  task: "regression" # ['classification_binary', 'classification_multiclass', 'classification_multilabel']

trainer:
  accelerator: "cpu"
  # devices: 1
  max_epochs: 1
  # val_check_interval: 2
  check_val_every_n_epoch: 1
  # log_every_n_steps: 10


model:
  provider_name: "torchvision" # choose from ["timm", "torchvision"]
  model_name: "resnet18"
  model_kwargs:
    weights: 'ResNet18_Weights.DEFAULT' # Deprecated in torchvision since 0.13 (replaced by "weights") but used by timm
    num_classes:
    in_chans:
    output_stride:
    global_pool:
  modifiers:
    change_first_convolutional_layer:
      num_input_channels: 7
    change_last_layer:
      num_outputs: ${data.num_classes}  # set to 1 for binary classification

optimizer:
  lr: 1e-2
  weight_decay: 0
  momentum: 0.9
  nesterov: true
  metrics:
    # binary_accuracy:
    #   # callable: 'Fmetrics.accuracy'
    #   kwargs: {}
    # multiclass_accuracy:
    #   # callable: 'Fmetrics.classification.multiclass_accuracy'
    #   kwargs:
    #     num_classes: *num_classes
    regression_R2score:
      callable: 'Fmetrics.regression.r2_score'
      kwargs: 
        
